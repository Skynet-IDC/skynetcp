#!/bin/bash
# info: delete remote dns domain
# options: USER DOMAIN
#
# example: v-delete-remote-dns-domain admin example.tld
#
# This function synchronise dns with the remote server.

#----------------------------------------------------------#
#                Variables & Functions                     #
#----------------------------------------------------------#

# Argument definition
user=$1
domain=$2

# Includes
# shellcheck source=/etc/skynetcp/skynet.conf
source /etc/skynetcp/skynet.conf
# shellcheck source=/usr/local/skynet/func/main.sh
source $SKYNET/func/main.sh
# shellcheck source=/usr/local/skynet/func/remote.sh
source $SKYNET/func/remote.sh
# load config file
source_conf "$SKYNET/conf/skynet.conf"

#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '2' "$#" 'USER DOMAIN'
is_format_valid 'user' 'domain'
is_system_enabled "$DNS_CLUSTER" 'DNS_CLUSTER'
is_procces_running
remote_dns_health_check

# Perform verification if read-only mode is enabled
check_skynet_demo_mode

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Starting cluster loop
IFS=$'\n'
for cluster in $(grep "SUSPENDED='no'" $SKYNET/conf/dns-cluster.conf); do

	# Reset user, password and hash vars
	clear_dns_cluster_settings

	# Parsing remote host parameters
	parse_object_kv_list "$cluster"

	# Syncing domain
	cluster_cmd v-delete-dns-domain "$DNS_USER" "$domain" 'yes'
	rc=$?
	if [ "$rc" -ne 0 ] && [ $rc -ne 3 ]; then
		check_result $rc "$HOST connection failed (sync)" "$E_CONNECT"
	fi

done

#----------------------------------------------------------#
#                       Skynet                             #
#----------------------------------------------------------#

# Updating pipe
pipe="$SKYNET/data/queue/dns-cluster.pipe"
str=$(grep -n "$SCRIPT $1 $2$" "$pipe" | cut -f1 -d: | head -n1)
if [ -n "$str" ]; then
	sed -i "$str d" "$pipe"
fi

exit
