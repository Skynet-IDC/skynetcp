#!/bin/bash
# info: Install SnappyMail webmail client
# options: [MODE]
#
# This function installs the SnappyMail webmail client.

#----------------------------------------------------------#
#                Variables & Functions                     #
#----------------------------------------------------------#
HOMEDIR='/home'
BACKUP='/backup'
BACKUP_GZIP=9
BACKUP_DISK_LIMIT=95
BACKUP_LA_LIMIT=$(grep -c '^processor' /proc/cpuinfo)
RRD_STEP=300
BIN=$SKYNET/bin
SKYNET_INSTALL_DIR="./deb"
SKYNET_COMMON_DIR="./common"
SKYNET_BACKUP="/root/hst_backups/$(date +%d%m%Y%H%M)"
SKYNET_PHP="$SKYNET/php/bin/php"
USER_DATA=$SKYNET/data/users/$user
WEBTPL=$SKYNET/data/templates/web
MAILTPL=$SKYNET/data/templates/mail
DNSTPL=$SKYNET/data/templates/dns
RRD=$SKYNET/web/rrd
SENDMAIL="$SKYNET/web/inc/mail-wrapper.php"
SKYNET_GIT_REPO="https://raw.githubusercontent.com/Skynet-IDC/skynetcp"
SKYNET_THEMES="$SKYNET/web/css/themes"
SKYNET_THEMES_CUSTOM="$SKYNET/web/css/themes/custom"
SCRIPT="$(basename $0)"
CHECK_RESULT_CALLBACK=""
# Includes
# shellcheck source=/etc/skynetcp/skynet.conf
source /etc/skynetcp/skynet.conf
# shellcheck source=/usr/local/skynet/func/main.sh
source $SKYNET/func/main.sh
# load config file
source_conf "$SKYNET/conf/skynet.conf"
# upgrade config file
source "$SKYNET/install/upgrade/upgrade.conf"

MODE=$1
UPDATE="no"
# Version and Download paths
# Version to be moved to upgrade script
SM_FILE="snappymail-latest.tar.gz"
# For removal of folder
SM_EXTRACT_MAIN="snappymail"

# Downloading full version
SM_URL="https://snappymail.eu/repository/latest.tar.gz"

# Folder paths
SM_INSTALL_DIR="/var/lib/snappymail"
SM_CONFIG_DIR="/etc/snappymail"
SM_LOG="/var/log/snappymail"

#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

# Checking root permissions
if [ "x$(id -u)" != 'x0' ]; then
	echo "ERROR: v-add-sys-snappymail can only be executed by the root user"
	exit 10
fi

# Ensure that $SKYNET (/usr/local/skynet/) and other variables are valid.
if [ -z "$SKYNET" ]; then
	skynet="/usr/local/skynet"
fi

if [ -z "$HOMEDIR" ] || [ -z "$SKYNET_INSTALL_DIR" ]; then
	echo "ERROR: Environment variables not present, installation aborted."
	exit 2
fi

if [ -z "$(echo "$DB_SYSTEM" | grep -w 'mysql')" ]; then
	echo "ERROR: Mysql not available. Installation aborted"
	exit 2
fi

# Get current version
if [ -f "/var/lib/snappymail/data/VERSION" ]; then
	version=$(cat $SM_INSTALL_DIR/data/VERSION)
	if [ "$version" == "$sm_v" ]; then
		echo "Error: Installed version ($version) is equal to the available version ($sm_v)"
		exit 2
	else
		UPDATE="yes"
	fi
fi

# Perform verification if read-only mode is enabled
check_skynet_demo_mode

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

if [ "$UPDATE" == "no" ]; then
	rm -f -r $SM_INSTALL_DIR
	rm -f -r $SM_CONFIG_DIR

	mkdir $SM_INSTALL_DIR
	mkdir $SM_CONFIG_DIR

	cd "$SM_INSTALL_DIR"
	[ ! -f "${SM_INSTALL_DIR}/${SM_FILE}" ] && wget "$SM_URL" --retry-connrefused --quiet -O "${SM_INSTALL_DIR}/${SM_FILE}"

	if [ ! -f "${SM_INSTALL_DIR}/${SM_FILE}" ]; then
		echo "ERROR: Download failed, installation aborted."
		exit 2
	fi

	key=$(openssl rand -hex 4)
	suffix=$(openssl rand -hex 4)
	admin_account="admin_$key"
	admin_password=$(generate_password)

	echo "Username: admin_$key" > ~/.snappymail
	echo "Password: $admin_password" >> ~/.snappymail
	echo "Admin Panel key: admin_$suffix" >> ~/.snappymail

	tar -xzf ${SM_INSTALL_DIR}/${SM_FILE}
	# Get current version
	version=$(cat ./data/VERSION)

	mv ./data $SM_CONFIG_DIR/
	ln -s $SM_CONFIG_DIR/data/ ./data

	# Create cache folder and set permissions
	mkdir -p "$SM_CONFIG_DIR/data/_data_/_default_/cache/"
	chown -R www-data:www-data ./data

	if [ -f '/usr/bin/mariadb' ]; then
		mariadb -e "CREATE DATABASE snappymail" 2>&1
		r=$(generate_password)
		mariadb -e "GRANT ALL ON snappymail.*
		 TO snappymail@localhost IDENTIFIED BY '$r'"
	else
		mysql -e "CREATE DATABASE snappymail" 2>&1
		r=$(generate_password)
		mysql -e "GRANT ALL ON snappymail.*
		 TO snappymail@localhost IDENTIFIED BY '$r'"
	fi
	# Temporarily set the permissions to www-data
	chown -R www-data:www-data $SM_CONFIG_DIR/
	php -f $SKYNET_COMMON_DIR/snappymail/install.php "admin_$key" "admin_$suffix" "$admin_password" "$r" "$BACKEND_PORT"

	# Set the permissions back to skynetmail
	chown -R skynetmail:www-data $SM_CONFIG_DIR/

	# Remove the downloaded file
	rm ${SM_INSTALL_DIR}/${SM_FILE}
	# Add robots.txt
	echo "User-agent: *" > $SM_INSTALL_DIR/robots.txt
	echo "Disallow: /" >> $SM_INSTALL_DIR/robots.txt

	# Updating skynet.conf
	if [ -z "$(grep WEBMAIL_SYSTEM $SKYNET/conf/skynet.conf)" ]; then
		$BIN/v-change-sys-config-value 'WEBMAIL_SYSTEM' 'snappymail'
	else
		if [ -z "$(echo "$WEBMAIL_SYSTEM" | grep -w 'snappymail')" ]; then
			if [ -n "$WEBMAIL_SYSTEM" ]; then
				$BIN/v-change-sys-config-value 'WEBMAIL_SYSTEM' "snappymail,$WEBMAIL_SYSTEM"
			else
				$BIN/v-change-sys-config-value 'WEBMAIL_SYSTEM' "snappymail"
			fi
		fi
	fi

else
	[ ! -f "${SM_INSTALL_DIR}/${SM_FILE}" ] && wget "$SM_URL" --quiet -O "${SM_INSTALL_DIR}/${SM_FILE}"
	if [ ! -f "${SM_INSTALL_DIR}/${SM_FILE}" ]; then
		echo "ERROR: Download failed, installation aborted."
		exit 2
	fi

	version=$(cat $SM_INSTALL_DIR/data/VERSION)
	cd $SM_INSTALL_DIR
	mkdir -p /tmp/snappy/
	tar -xzf snappymail-latest.tar.gz -C /tmp/snappy/
	version_source=$(cat /tmp/snappy/data/VERSION)
	# Check version inside .tar.gz file in case skynet didn't update yet
	if [ "$version" != "$version_source" ]; then
		tar -xzf ${SM_INSTALL_DIR}/${SM_FILE}
		rm $SM_INSTALL_DIR/$SM_FILE
	fi
	rm -fr /tmp/snappy
fi

#----------------------------------------------------------#
#                       Skynet                             #
#----------------------------------------------------------#

if [ "$UPDATE" = "yes" ]; then
	$BIN/v-log-action "system" "Info" "Plugins" "SnappyMail updated (Version: $version)."
else
	$BIN/v-log-action "system" "Info" "Plugins" "SnappyMail enabled (Version: $version)."
fi
log_event "$OK" "$ARGUMENTS"
